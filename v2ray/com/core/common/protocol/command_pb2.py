# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: v2ray.com/core/common/protocol/command.proto

import sys
_b=sys.version_info[0]<3 and (lambda x:x) or (lambda x:x.encode('latin1'))
from google.protobuf import descriptor as _descriptor
from google.protobuf import message as _message
from google.protobuf import reflection as _reflection
from google.protobuf import symbol_database as _symbol_database
# @@protoc_insertion_point(imports)

_sym_db = _symbol_database.Default()


from v2ray.com.core.common.serial import typed_message_pb2 as v2ray_dot_com_dot_core_dot_common_dot_serial_dot_typed__message__pb2
from v2ray.com.core.transport.internet import config_pb2 as v2ray_dot_com_dot_core_dot_transport_dot_internet_dot_config__pb2


DESCRIPTOR = _descriptor.FileDescriptor(
  name='v2ray.com/core/common/protocol/command.proto',
  package='v2ray.core.common.protocol',
  syntax='proto3',
  serialized_options=_b('\n\036com.v2ray.core.common.protocolP\001Z\010protocol\252\002\032V2Ray.Core.Common.Protocol'),
  serialized_pb=_b('\n,v2ray.com/core/common/protocol/command.proto\x12\x1av2ray.core.common.protocol\x1a\x30v2ray.com/core/common/serial/typed_message.proto\x1a.v2ray.com/core/transport/internet/config.proto\"\x9b\x01\n\x19\x41lternativeOutboundConfig\x12\x38\n\x08settings\x18\x01 \x01(\x0b\x32&.v2ray.core.common.serial.TypedMessage\x12\x44\n\x0fstream_settings\x18\x03 \x01(\x0b\x32+.v2ray.core.transport.internet.StreamConfigBI\n\x1e\x63om.v2ray.core.common.protocolP\x01Z\x08protocol\xaa\x02\x1aV2Ray.Core.Common.Protocolb\x06proto3')
  ,
  dependencies=[v2ray_dot_com_dot_core_dot_common_dot_serial_dot_typed__message__pb2.DESCRIPTOR,v2ray_dot_com_dot_core_dot_transport_dot_internet_dot_config__pb2.DESCRIPTOR,])




_ALTERNATIVEOUTBOUNDCONFIG = _descriptor.Descriptor(
  name='AlternativeOutboundConfig',
  full_name='v2ray.core.common.protocol.AlternativeOutboundConfig',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='settings', full_name='v2ray.core.common.protocol.AlternativeOutboundConfig.settings', index=0,
      number=1, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='stream_settings', full_name='v2ray.core.common.protocol.AlternativeOutboundConfig.stream_settings', index=1,
      number=3, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=175,
  serialized_end=330,
)

_ALTERNATIVEOUTBOUNDCONFIG.fields_by_name['settings'].message_type = v2ray_dot_com_dot_core_dot_common_dot_serial_dot_typed__message__pb2._TYPEDMESSAGE
_ALTERNATIVEOUTBOUNDCONFIG.fields_by_name['stream_settings'].message_type = v2ray_dot_com_dot_core_dot_transport_dot_internet_dot_config__pb2._STREAMCONFIG
DESCRIPTOR.message_types_by_name['AlternativeOutboundConfig'] = _ALTERNATIVEOUTBOUNDCONFIG
_sym_db.RegisterFileDescriptor(DESCRIPTOR)

AlternativeOutboundConfig = _reflection.GeneratedProtocolMessageType('AlternativeOutboundConfig', (_message.Message,), dict(
  DESCRIPTOR = _ALTERNATIVEOUTBOUNDCONFIG,
  __module__ = 'v2ray.com.core.common.protocol.command_pb2'
  # @@protoc_insertion_point(class_scope:v2ray.core.common.protocol.AlternativeOutboundConfig)
  ))
_sym_db.RegisterMessage(AlternativeOutboundConfig)


DESCRIPTOR._options = None
# @@protoc_insertion_point(module_scope)
